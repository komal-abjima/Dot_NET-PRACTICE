// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Section_18_EntityFrameworkCore_PracticeCode.Data;

#nullable disable

namespace Section_18_EntityFrameworkCore_PracticeCode.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240311101438_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Section_18_EntityFrameworkCore_PracticeCode.Models.Country", b =>
                {
                    b.Property<Guid>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.ToTable("Countries", (string)null);

                    b.HasData(
                        new
                        {
                            CountryID = new Guid("f0e9b6bb-c5f6-4daf-ba5d-258a4749443f"),
                            CountryName = "UK"
                        },
                        new
                        {
                            CountryID = new Guid("4e87cbc6-1edf-4b52-b9d9-4e61bf1b48b3"),
                            CountryName = "USA"
                        },
                        new
                        {
                            CountryID = new Guid("56e16af6-3418-4b2c-a279-f893ba65cd0c"),
                            CountryName = "Italy"
                        });
                });

            modelBuilder.Entity("Section_18_EntityFrameworkCore_PracticeCode.Models.Person", b =>
                {
                    b.Property<Guid>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PersonName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("ReceiveNewsLetters")
                        .HasColumnType("bit");

                    b.Property<string>("TIN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonID");

                    b.HasIndex("CountryID");

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("Section_18_EntityFrameworkCore_PracticeCode.Models.Person", b =>
                {
                    b.HasOne("Section_18_EntityFrameworkCore_PracticeCode.Models.Country", "Country")
                        .WithMany("Persons")
                        .HasForeignKey("CountryID");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Section_18_EntityFrameworkCore_PracticeCode.Models.Country", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
